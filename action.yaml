name: build-and-push-docker-image

description: |
  This action builds a Docker image from a Dockerfile and pushes it to a Docker registry.

inputs:
  dockerfile-path:
    description: 'The path to the Dockerfile to build the image from.'
    required: false
    default: 'Dockerfile'

  image-name:
    description: 'The name to give the Docker image, including any repository and tag information.'
    required: true
  registry-url:
    description: 'The URL of the Docker registry to push the image to.'
    required: true
  registry-username:
    description: 'The username to authenticate with the Docker registry.'
    required: true
  registry-password:
    description: 'The password or access token to authenticate with the Docker registry.'
    required: true
  build-args:
    description: 'Optional build arguments to pass to the Docker build command.'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Checkout code
      shell: bash
      run: |
        git clone https://github.com/${{ github.repository }} /tmp/workspace
        cd /tmp/workspace
        git checkout ${{ github.sha }}

    - name: Build Docker image
      shell: bash
      run: |
              build_args="${{ inputs.build-args }}"
              dockerfile_path="${{ inputs.dockerfile-path }}"
              docker build -t ${{ inputs.image-name }}:${{ inputs.image-version }}${{ dockerfile_path != 'Dockerfile' ? " -f " + dockerfile_path : "" }} ${build_args:+--build-arg $build_args} .
              echo "::set-output name=image-tag::${{ inputs.image-name }}:${{ inputs.image-version }}"

    - name: Login to Docker registry
      shell: bash
      run: |
        docker login -u ${{ inputs.registry-username }} -p ${{ inputs.registry-password }} ${{ inputs.registry-url }}

    - name: Push Docker image
      shell: bash
      run: |
        docker push ${{ inputs.registry-url }}/${{ inputs.image-name }}
